 Introduction:
 The advent of the Web turned possible the appearance of new form of transmission ideas and contents in online environments. The Web design process uses techniques to adequate structuring of information, using appropriate resources to serve on web pages, in a manner that the user can reach his goal in a direct and pleasant way. Web design  distinguishes  itself from  other traditional  forms  of design.  The Web  is  a unique channel that forces designers not to be able to control the environment around them. Elements such as colors, shapes, and layouts can be customized by the user (or by the users’ web browser), and there are no guarantees that all users will see the same Web page in the same way that it was designed and developed. In this sense, Web designer need to concept Web applications, without knowing in advance the Web browsers that will be used, the technological platform on which application will be run, such as operating systems, personal preferences of users, resolution of the access devices, and the characteristics and speed of the Internet connection.


The evolution of Web paradigm:
The Internet is an essential tool for citizens, businesses and public entities. Since its appearance, a number of significant changes have arisen, from the most basic paradigm of Web 1.0 to Web 4.0. The first phase of the Web, known as Web 1.0, is characterized by static content publishing, in which users had the power to only consume the content placed by companies. At that time, there was no bidirectional communication between the client and a company, and email emerged 50 http://www.webology.org/2017/v14n2/a157.pdf  as the primary form of digital contact between these two entities. Web 1.0 is characterized by its low interactivity. Companies used the Internet as an alternative channel to publish content and news,  without  worrying  much  about  users’  opinions,  who  behaved  like  a  passive  viewer  of information.  The number of Internet users has been growing and it was progressively verified that their needs directly influenced the way companies use their resources and tools (Dooley et al., 2012). These changes  forced  the  emergence  of  a  new  environment,  known  as  Web  2.0,  whose  main characteristic is its high interactivity. Web 2.0 includes a large and diverse panoply of services, such as social networks, blogs and wikis, that promote collaboration and the fast exchange of information among users. Andriole (2010) states that Web 2.0 has helped companies to become more competitive and  position themselves in the marketplace. The main advantage associated with Web 2.0 is its potential in establishing collaboration, and the main disadvantage is the loss of control of the shared information.
The growth of Web 2.0, particularly with the exponential expansion of social networks, created in a few years a huge amount of information about the users. This information is a valuable asset for the definition and personalization of marketing and business strategies in the most varied sectors of activity. In this sense, Web 3.0 emerged as a new paradigm that allowed companies to explore this information about users, in order to identify trends and optimize their experiences on the  Web.  With  the  appearance  of  the  Web  3.0  has  become  much  easier  to  find  relevant information on a given subject. However, as a major disadvantage, it can appear security issues, such as unauthorized access and manipulation of data (Rudman & Bruwer, 2016)
	The concept of responsive design
Website design is a crucial point in a website development process. It involves the arrangement of  content into  graphical  models  that  can be  used as  a basis  for  coding  a  site  (Almeida  & Monteiro,  2017).  The  increasing  number  of  Internet  users  and  mobile  devices,  such  as smartphones and tablets, has caused a need to adapt the content displayed on each device. The idea of designing multiple versions of the same site to attend each size of screen and resolution would  not be possible,  because it would  originate impractical  costs and a  high maintenance effort. Responsive  design emerges  as  a  technical  solution  that  mitigates this  issue,  since a  website dynamically adapts to the width of the device in which is being visualized. Subic et al. (2014)state that the content of a website should intelligently re-shaped itself for maximum usability and impact. In this way, the HTML and CSS code of a website is adapted to the resolution of the device without having the need to define different styles. Responsible web design is composed by three technical components (Cazañas & Parra, 2017): (i) fluid grids, (ii) flexible images; and (iii) media queries. Fluid grids are responsible to assign relative units to page elements; flexible images  are also  sized  in  relative  units; and  media queries  make possible  to switch  between different CSS  based on the  features of the  device. An example  of a website  built using  the responsive design
Creating responsive design includes: (i) tailoring the page layout to the resolution of the device; (ii)  resize  the  images  automatically to  they  fit on  the  screen; hide  unnecessary  elements in smaller devices; (iii) adapt size of buttons and links to touch interfaces where the mouse pointer is replaced by the user's finger; and (iv) use intelligently features in mobile devices, such as geo-localization and changing the orientation of the content view.The loading time of a website is one of the most critical aspects of building a responsive design. Paying attention to image size is critical for ensuring that responsive websites load quickly and deliver the best experience for mobile users. A survey conducted by Trilibis identified that a total of  123  in  155  responsive  sites performed  badly  on  mobile  phones  (Trilibis,  2014). A  good solution is to adopt server-side image optimization, which will reduce image weight and page-load  time.  Cao  (2017)  also  confirmed  that  image  size  is  a  cause  for  the  bad  loading  time performances, but he also identified eight elements that can potentially cause performance issues in Web responsive design, such as: (i) bloated, untidy code; (ii) plugins; (iii) themes; (iv) under-optimized images; (v) poorly constructed responsive design; (vi) render-blocking JavaScript and CSS; (vii) lack of GZIP compression; and (viii) poor server setup.
A debate point in the community is the adoption of native apps or mobile Web apps. Native apps typically offer better performance since they work  with  the  device’s built-in features. On the other  hand,  web  apps  built  using  responsive  design  paradigm  are  much  easier  to  maintain, because they have a common code base across multiple mobile platforms. Jobe (2013) identified that mobile Web applications that require hardware interaction, such as using the GPS, GPU, or camera, are not yet good alternatives for native applications. On the other hand, White (2013) considers that  mobile Web development approach is more suitable for apps that have a lot of content delivered via web and when they need to be updated regularly and quickly.
Hybrid mobile development approaches have also appeared in recent years. The idea is to avoid the  need of implementation  the same  application for different  platforms  separately,  allowing developers to extend the number of platforms which can run the application. Additionally, the web-based nature of this approach ensures that the application must not necessarily be platform-specific  (Rakestraw  et  al.,  2013).  Numerous  frameworks  appeared  in  the  market,  such  as PhoneGap, Adobe Air, Ionic, or QT. Alqahtani  & Goodwin  (2012) use PhoneGap to build  a mobile e-commerce application, integrating simultaneously design and security non-functional requirements. Martin et al. (2014) uses PhoneGap to build a Web and mobile application for the management of payments for a feel of vehicles using the “Via Verde” device. Finally, Litayem et al.  (2015)  propose  the  use  of  a  hybrid  approach  for  the  development  of  mobile  learning platforms. The result is a more compatible and more stable cross-platform learning application specifically for quizzes and assignments. 
There are several advantages associated with responsive design approach. Lestari et al. (2014) advocate that responsive web design is a suitable approach to offer improve user experiences. Majid et al. (2015) consider that responsive design is a highly flexible approach that can be used for the development of e-commerce solutions to improve SEO. Rashid (2017) consider that there are five essential reasons that support the great growth of  responsive design, respectively: (i) increased traffic from mobile users;  (ii)  lower cost  and website maintenance; (iii) provides a seamless user experience; (iv) adapts easily to any screen size; and (v) improves SEO efforts. Owens (2015) defines the concept of website bounce rate as “the percentage of people who visit your site and leave after viewing only one page” and advocates that responsive web design may play  a  relevant  role  in  decreasing  the  website  bounce  rate.  Winkless  (2015)  suggests  that responsive web design contributes to increase the productivity of web designers. Finally, Baker (2014)  advocates that  web  responsive design,  namely the  use  of HTML5  and CSS  level  3, promotes the creation of accessible web pages
On the other  hand, we also identified  in the literature some disadvantages of responsive Web design. Soegaard (2017)  presents two main limitations  of responsive design: (i)  difficulties in optimizing user experience due to bad content adaptation; and (ii) higher loading time. Glassman &  Shen  (2014)  reports  issues  when  adopting  responsive  design  in  complex  projects  and difficulties to integrate with CSS media queries. Finally, Tranfici (2013) states that CSS3 is not widely supported in all older browser versions
Methodology:
This study aims to understand the main potentialities and limitations of responsive design in the perspective of software developers. Four research questions (RQs) are defined: o RQ1 – What is the perception of software developers on the main benefits and limitations of responsive design? o RQ2 – Do the benefits and limitations of responsive design are different for professionals with more professional experience as software developers? o RQ3 – Do the benefits and limitations of responsive design are different for professionals with more experience in developing websites with responsive design? o RQ4 – Do the benefits and limitations of responsive design are different for professionals working in different sectors of activity? The study adopts  a quantitative approach based  on a questionnaire created  using the  Google Drive platform and delivered it through two  professional LinkedIN groups in the  Web design field,  and  in  a  forum  (www.webdeveloper.com/forum)  that  is  specially  dedicated  to  Web developer practices. The questionnaire was available during the entire month of November 2017. Questionnaires offer several important benefits. According to Queirós et al. (2017), they are high representativeness  of the  entire  population  and  a  low  cost  method  when  compared  to  other alternatives.  In  fact,  since  the  same  question  is  answered  by  several  respondents,  then  this reduces the possibility of evaluator bias. Additionally, tabulation of closed-ended responses is an easy and straightforward process (Singer & Couper, 2017). However, there are some issues when adopting Web questionnaires  that should  be properly mitigated.  Fricker  and Schonlau (2002) report that Internet-based surveys typically achieve very low response rates, expect when using university-based populations or small specialized  populations. Therefore, the survey was only disclosed to a target audience  that is potentially interested in the results of this investigation, hence their motivation  to  participate in  this study was also higher. Finally, it is important  to mention that the use of surveys does not allow exploring the causes and reasons for each of the respondents' answers.  In this sense, it was considered from the literature review that there are already  some  exploratory  studies  of  a  qualitative  nature  that  approach  the  advantages  and limitations of Web responsive design, but that there  is a deficit in the  analysis of the relative importance of each of them The  questionnaire  is composed  of  18  questions  divided into  three  sections  (i.e.,  contextual, benefits, and limitations). The “contextual data” section, together with the last two, allows us to respond to RQ2, RQ3 and RQ4. To answer the RQ1 we would only need the last two sections of the questionnaire.
54 http://www.webology.org/2017/v14n2/a157.pdf  The  questionnaire  is composed  of  18  questions  divided into  three  sections  (i.e.,  contextual, benefits, and limitations). The “contextual data” section, together with the last two, allows us to respond to RQ2, RQ3 and RQ4. To answer the RQ1 we would only need the last two sections of the questionnaire. The purpose of each section is detailed in Table 1. Table 1. Structure of the questionnaire Section Description Contextual data Information regarding the type of sector of activity and experience of the software developer. Benefits analysis List of benefits associated to responsive design. Limitations analysis List of limitations associated to responsive design
In the last two sections of the questionnaire, we use a multiple choice grid with a Likert scale. This  approach  guarantees  that  respondents can  easily  and quickly  answer  the  questionnaire, because they are restricted to a finite set of responses. Furthermore, this approach allows new questions to be easily incorporated into the questionnaire without changing its structure. The Likert scale is composed of five levels, such as: 1. strongly disagree; 2. disagree; 3. neither agree nor disagree; 4. agree; and 5. strongly agree. Likert scale data is considered suitable for qualitative nature studies, in which statistical processes can be applied for data analysis (Hartley, 2014). According to Boone & Boone (2012), the following statistical methods can be applied: (i) mean for central  trend  analysis; (ii)  standard  deviation for  variability analysis; (iii) Pearson's coefficient for  association analysis; and  (iv) ANOVA, t-test and regression as other  statistical elements. 
RQ1 – What are the main benefits and limitations of responsive design?
 Table  5  summarizes  statistical  information  regarding  all  the  benefits  offered  by  responsive  design presented in  the survey. The variables with a higher  mean are: (i) good user experience; (ii) increases accessibility;  (iii)  increases  productivity;  and  (iv)  high  flexibility.  On  the  other  hand,  the  benefits considered less relevant are: (i) low maintenance time and costs; and (ii) lower bounce rate. All these last two variables have a mean less than 3. The standard deviation of the variables allows us to know which benefits have greater and less dispersion. It is emphasized that there is a greater dispersion of opinions regarding the low time and cost in the development of an application. On the other hand, there is a greater   agreement of  opinions  regarding  the importance  given to  the good  user experience and  the potential offered by responsive design in increasing accessibility. Finally, it is relevant to analyze the behavior of benefits offered by responsive design by analyzing the statistical elements related to median, mode and percentiles (P25 and P75). At this level, there is an absolute agreement between the values of median and mode, except for the variable "low development time and costs". It can be seen that the variables "good user  experience"  and  "increases  accessibility"  have  a  positive  asymmetry,  while  the  variables  "low maintenance time and costs" and "improved SEO" offer negative asymmetry. In relation to the remaining variables, we can state that they are approximately symmetric. 
RQ2 – Do the benefits and limitations of responsive design are different for professionals with more professional experience as software developers?
We  intend  to  analyze  if  the  benefits  offered  by  the  use  of  responsive  design  are  different according to the years of professional experience in the area of software development. For that, we perform a two-tailed t-test in order to find evidence of a significant difference between the means of answers provided by respondents with more than 5 years and between 3 and 5 years of professional experience. 
In fact, the importance given to these two benefits is less for respondents with professional experience in the area of software development. Most  existing  studies emphasize the  ease of creating  a  website using  responsive  design, but ignore the impact on its maintenance in the medium and long term. Cao (2015) mentions that developing  a  website  in  responsive  design  may  take  longer  than  using  an  adaptive  design approach. Harris (2015) considers that sometimes it is preferable to use a few specific layouts, instead  of  considering  just  one  layout  that  can  work  in  any  screen  size.  This  seemingly interesting approach makes the maintenance process more complex, particularly when we have to maintain several layouts, which require extra attention to the site's CSS and organization of contents. This situation is more easily perceived by developers with greater years of experience
RQ3 – Do the benefits and limitations of responsive design are different for professionals with more experience in developing websites with responsive design? 
Another point  that deserves our  attention is the  analysis of the  behavior of the  benefits and limitations  associated  with  the  responsive  design  considering  professionals  with  a  greater number of years of experience using responsive design. It should be mentioned that this analysis is  different  from  the  previous  one,  since  there  may  be  professionals  with  several  years  of experience  in  the  area  of  software  development,  but  who  have  only  recently  begun to  use responsive design. Looking at Table 9 we found that the variables "low development time and costs",  and  "low  maintenance  time  and  costs"  present  significant  mean  differences  for professionals  with  more  than  3  years  of  experience  working  with  responsive  design.  This conclusion  is  similar  to  RQ2,  and  it  can  be  concluded  that  professional  experience  in  the information technology sector has an impact on the less perceived benefits associated with the low development time and maintenance of a technology solution based on responsive design
RQ4  – Do the  benefits and  limitations of responsive design  are different  for  professionals working in different sectors of activity?
Finally, we analyze whether the benefits and limitations of responsive design differ according to the  sector  of  activity  of  the  developers.  We  considered  three,  sufficiently  generic  and comprehensive, sectors of activity: (i) private; (ii) public; and (iii) freelancer. Freelancers are defined in our work as a professional that works by its own, providing services to companies or individuals in an autonomous way. Analyzing Table 11, there are only significant mean differences for the private and  freelancer sectors.  In  private  companies,  there  is  a  lower  perception  of  the  advantages  related  to development  time  and  maintenance  costs.  This  is  the  only  indicator  for  which  there  are significant statistical differences. The biggest differences are for freelancers, who have a greater awareness of the benefits offered by responsive design in terms of time and costs of development and  maintenance,  and  increased  SEO.  Freelancers are  also  less  aware  of  the  limitations  of responsive design in the loading time of a website and in compatibility with older Web browsers. We intend to understand the reasons that explain a greater difference in the perception of benefits and  limitations  for  freelancers. The  literature  doesn’t  address  this  situation and, therefore, we judge  the  behavior  of  these  variables  against  the  typical  profile  presented  by  a  freelancer. Traditionally a  freelancer  is  a  developer with  less experience  in  the  information  technology sector, with a significant number of them being young graduates or students still attending higher
  education. In this sense, it is likely that freelancers will have a stricter knowledge of the different technologies and view responsive design as a quick and versatile way of creating a responsive website. In this sense, their practical perception of the entire software development cycle, which necessarily  includes  maintenance,  is  lower  than  for  other  professionals.  This  situation  also explains that many of them do not experience so many difficulties in compatibility with older browsers, since in most  of these projects already they are working  exclusively with  browsers with support for HTML5 and CSS3.
Responding  to RQ4  we realize  that the  perception  of benefits  and  limitations of  responsive design  is  distinct  for  private  companies  and  particularly  for  freelancers.  Private  companies manifest  a lower  perception  of benefits  associated  with costs  and  time  of  development  and maintenance. On the other hand, the biggest differences are among the freelancers who have a greater positive perception of the advantages related to the time and costs of maintenance and development and also in the contribution given by the responsive design to increase the SEO. Regarding the limitations, we perceive a less consideration of the impact of responsive design in loading time of a website and the existence of compatibility issues with older versions of a Web browser.  
One of the biggest debates that we’ve seen since the rise of mobile is whether you should choose to develop a responsive, adaptive web design (AWD) or standalone mobile site (with its own m. URL). For the purposes of this discussion, we’ll leave out standalone m. sites as it appears to be the least favorite solution for designers and businesses since they must be created separately (which accrues more upfront cost and maintenance costs).

Put simply, responsive is fluid and adapts to the size of the screen no matter what the target device. Responsive uses CSS media queries to change styles based on the target device such as display type, width, height, etc., and only one of these is necessary for the site to adapt to different screens.Adaptive design, on the other hand, uses static layouts based on breakpoints that don’t respond once they’re initially loaded.
320
480
760
960
1200
1600.
On the surface, it appears that adaptive requires more work as you have to design layouts for a minimum of six widths. However, responsiveness can be more complex as improper use of media queries (or indeed not using them at all) can make for display and performance issues.
The latter in particular has created a lot of discussion over the past few years as it’s been the case that many sites deliver the full desktop model which, even if it’s not loading on the mobile device, slows sites down considerably. To get around this, you can use media queries–but there will be a few tradeoffs since a responsive site is never going to be as quick as a dedicated mobile site.
Why Use Adaptive Design?
Adaptive is useful for retrofitting an existing site in order to make it more mobile-friendly. This allows you to take control of the design and develop for specific, multiple viewports. The number of viewports that you choose to design for is entirely up to you, your company, and your overall budget. It does, however, afford you a certain amount of control (for example over content and layout) that you won’t necessarily have using responsive design.

Generally, you would begin by designing for a low-resolution viewport and work your way up to ensure that the design doesn’t become constrained by the content.
As mentioned previously, it’s standard to design for six resolutions. However, you can make a more informed decision by looking at your web analytics for the most commonly used devices and then designing for those viewports.

If you want to design an adaptive site from scratch, that’s OK too. Start again by designing for the lowest resolution and work your way up. You can then use media queries to expand the layout for higher resolution viewports. However, if you do design for multiple resolutions, you may find that this causes the layout to ‘jump’ when resizing a window.

It can be extra work designing and developing a site with adaptive for multiple viewports so it’s usually used for retrofitting.
Responsive also requires more in the way of coding in order to ensure that the site fits each and every screen that accesses it. However, the extra work is debatable (compared to adaptive design) since adaptive design requires that you develop and maintain separate HTML and CSS code for each layout. Modifying adaptive sites is also more complex since it’s likely you’ll have to ensure that everything is still working sitewide (such as SEO, content, and links) when it’s time for implementation.
Why Use Responsive Design?
The majority of new sites now use responsive, which has been made easier for less experienced designers and developers, thanks to the availability of themes accessible through CMS systems such as WordPress, Joomla, and Drupal.

Responsive doesn’t offer as much control as adaptive, but takes much less work to both build and maintain. Responsive layouts are also fluid and whilst adaptive can and do use percentages to give a more fluid feel when scaling, these can again cause a jump when a window is resized. For example, in the image below, which shows a fluid layout, the designer is using percentage widths so that the view will be adjusted for each user.
With responsive, you will be designing with all layouts in mind and this, of course, can confuse the process and make it quite complex. This means that you should focus on creating a viewport for mid-resolution and you can then use media queries to adjust for low and high resolutions later on.
Responsive also requires more in the way of coding in order to ensure that the site fits each and every screen that accesses it. However, the extra work is debatable (compared to adaptive design) since adaptive design requires that you develop and maintain separate HTML and CSS code for each layout. Modifying adaptive sites is also more complex since it’s likely you’ll have to ensure that everything is still working sitewide (such as SEO, content, and links) when it’s time for implementation.
You should, of course, also consider the user experience. Because responsive essentially shuffles the content around in order to fluidly fit the device window, you will need to pay particular attention to the visual hierarchy of the design as it shifts around.
When it comes down to it, the key is to consider your audience first and foremost no matter what design technique you adopt. Once you know exactly who they are and what devices they tend to access the site on, then it’s easier to design with them in mind when it comes to layout, content, and so on.
It will also depend largely on whether you have an existing site to work with or you’re starting from scratch. Responsive design has become the go-to design technique and it’s thought that around 1/8 websites now use responsive (while there’s little to no data on how many use adaptive). Adoption rates for responsive are growing quickly too and have almost reached the same level as standalone mobile sites.

With all of that in mind, it’s safe to say that responsive is usually the preferred technique if only because of the ongoing work that adaptive design demands.
However, if a client or company has the budget, then adaptive might be a better choice, according to a test carried out by Catchpoint. They built two sites in WordPress, one using the standard WP TwentyFourteen responsive theme and the other using a plugin called Wiziapp.

The plugin serves a mobile theme to users depending on the device they’re accessing the site from and also offers advanced configuration options so that you can further streamline the process.
Almost every new client these days wants a mobile version of their website. It’s practically essential after all: one design for the BlackBerry, another for the iPhone, the iPad, netbook, Kindle — and all screen resolutions must be compatible, too. In the next five years, we’ll likely need to design for a number of additional inventions. When will the madness stop? It won’t, of course.
In the field of Web design and development, we’re quickly getting to the point of being unable to keep up with the endless new resolutions and devices. For many websites, creating a website version for each resolution and new device would be impossible, or at least impractical. Should we just suffer the consequences of losing visitors from one device, for the benefit of gaining visitors from another? Or is there another option?
What Is Responsive Web Design?
Responsive Web design is the approach that suggests that design and development should respond to the user’s behavior and environment based on screen size, platform and orientation.

The practice consists of a mix of flexible grids and layouts, images and an intelligent use of CSS media queries. As the user switches from their laptop to iPad, the website should automatically switch to accommodate for resolution, image size and scripting abilities. One may also have to consider the settings on their devices; if they have a VPN for iOS on their iPad, for example, the website should not block the user’s access to the page. In other words, the website should have the technology to automatically respond to the user’s preferences. This would eliminate the need for a different design and development phase for each new gadget on the market.
The Concept Of Responsive Web Design

Ethan Marcotte wrote an introductory article about the approach, Responsive Web Design, for A List Apart. It stems from the notion of responsive architectural design, whereby a room or space automatically adjusts to the number and flow of people within it:

"Recently, an emergent discipline called “responsive architecture” has begun asking how physical spaces can respond to the presence of people passing through them. Through a combination of embedded robotics and tensile materials, architects are experimenting with art installations and wall structures that bend, flex, and expand as crowds approach them. Motion sensors can be paired with climate control systems to adjust a room’s temperature and ambient lighting as it fills with people. Companies have already produced “smart glass technology” that can automatically become opaque when a room’s occupants reach a certain density threshold, giving them an additional layer of privacy."
Transplant this discipline onto Web design, and we have a similar yet whole new idea. Why should we create a custom Web design for each group of users; after all, architects don’t design a building for each group size and type that passes through it? Like responsive architecture, Web design should automatically adjust. It shouldn’t require countless custom-made solutions for each new category of users.

Obviously, we can’t use motion sensors and robotics to accomplish this the way a building would. Responsive Web design requires a more abstract way of thinking. However, some ideas are already being practiced: fluid layouts, media queries and scripts that can reformat Web pages and mark-up effortlessly (or automatically).

But responsive Web design is not only about adjustable screen resolutions and automatically resizable images, but rather about a whole new way of thinking about design. Let’s talk about all of these features, plus additional ideas in the making.
Adjusting Screen Resolution:
With more devices come varying screen resolutions, definitions and orientations. New devices with new screen sizes are being developed every day, and each of these devices may be able to handle variations in size, functionality and even color. Some are in landscape, others in portrait, still others even completely square. As we know from the rising popularity of the iPhone, iPad and advanced smartphones, many new devices are able to switch from portrait to landscape at the user’s whim. How is one to design for these situations?
In addition to designing for both landscape and portrait (and enabling those orientations to possibly switch in an instant upon page load), we must consider the hundreds of different screen sizes. Yes, it is possible to group them into major categories, design for each of them, and make each design as flexible as necessary. But that can be overwhelming, and who knows what the usage figures will be in five years? Besides, many users do not maximize their browsers, which itself leaves far too much room for variety among screen sizes.
FLEXIBLE EVERYTHING
A few years ago, when flexible layouts were almost a “luxury” for websites, the only things that were flexible in a design were the layout columns (structural elements) and the text. Images could easily break layouts, and even flexible structural elements broke a layout’s form when pushed enough. Flexible designs weren’t really that flexible; they could give or take a few hundred pixels, but they often couldn’t adjust from a large computer screen to a netbook.

Now we can make things more flexible. Images can be automatically adjusted, and we have workarounds so that layouts never break (although they may become squished and illegible in the process). While it’s not a complete fix, the solution gives us far more options. It’s perfect for devices that switch from portrait orientation to landscape in an instant or for when users switch from a large computer screen to an iPad.

In Ethan Marcotte’s article, he created a sample Web design that features this better flexible layout:
Flexible Images:
One major problem that needs to be solved with responsive Web design is working with images. There are a number of techniques to resize images proportionately, and many are easily done. The most popular option, noted in Ethan Marcotte’s article on fluid images but first experimented with by Richard Rutter, is to use CSS’s max-width for an easy fix.
As long as no other width-based image styles override this rule, every image will load in its original size, unless the viewing area becomes narrower than the image’s original width. The maximum width of the image is set to 100% of the screen or browser width, so when that 100% becomes narrower, so does the image. Essentially, as Jason Grigsby noted, “The idea behind fluid images is that you deliver images at the maximum size they will be used at. You don’t declare the height and width in your code, but instead let the browser resize the images as needed while using CSS to guide their relative size”. It’s a great and simple technique to resize images beautifully.

Note that max-width is not supported in IE, but a good use of width: 100% would solve the problem neatly in an IE-specific style sheet. One more issue is that when an image is resized too small in some older browsers in Windows, the rendering isn’t as clear as it ought to be. There is a JavaScript to fix this issue, though, found in Ethan Marcotte’s article.

While the above is a great quick fix and good start to responsive images, image resolution and download times should be the primary considerations. While resizing an image for mobile devices can be very simple, if the original image size is meant for large devices, it could significantly slow download times and take up space unnecessarily.

Custom Layout Structure:
For extreme size changes, we may want to change the layout altogether, either through a separate style sheet or, more efficiently, through a CSS media query. This does not have to be troublesome; most of the styles can remain the same, while specific style sheets can inherit these styles and move elements around with floats, widths, heights and so on.

For example, we could have one main style sheet (which would also be the default) that would define all of the main structural elements, such as #wrapper, #content, #sidebar, #nav, along with colors, backgrounds and typography. Default flexible widths and floats could also be defined.

If a style sheet made the layout too narrow, short, wide or tall, we could then detect that and switch to a new style sheet. This new child style sheet would adopt everything from the default style sheet and then just redefine the layout’s structure.


The  way  people  access  the  Web  is  changing  rapidly.  The  Web  is  increasingly  used  in smartphones,  tablets,  TVs  and  other devices.  Therefore  it  is  crucial  the  adoption  of  a  new approach of  creating  Web  pages and making  them able  to adapt  and  respond to any device. Responsive  design is  characterized  by ensuring  a dynamic  adaptation of  the contents  to the display  size, thus  ensuring  a  good  viewing experience  regardless of  the Web  access  device. Several advantages are associated with responsive design such as high flexibility, a good user experience, low development and maintenance time & costs, improved SEO, a lower bounce rate,  increased  productivity,  and  increased  accessibility.  However,  responsive  design  is  not exempt from criticism, and also  presents a set of limitations, respectively in the adaptation of contents, difficulties in optimizing user experience, higher loading time, not suitable for complex projects, low availability of CSS media queries and issues in browser compatibility with older versions. The performed study turns out that software developers emphasize the guarantee of a good user experience and the increase of accessibility as the two most important advantages of responsive design. Additionally, there is greater disagreement in considering time and maintenance costs as an advantage of responsive design. Regarding the limitations, they emphasize the compatibility with older versions of a Web browser, the higher loading time and the difficulties in optimizing user  experience.  Finally,  it  should  be  mentioned  that  the  perception  of  the  advantages  and limitations  of  responsive  design  is  slightly  different  for  professionals  with  greater  years  of experience and  for freelancers. The  professionals with  greater  professional experience in  the sector and in the field of responsive design give less importance to the benefits in terms of the time and costs of development and maintenance, besides mentioning greater difficulties in the process of adaptation  of contents; freelancers have the opposite  behavior as they give greater importance  to  maintenance development  costs  and  times,  as well  as  being  less  sensitive  to limitations in the loading time of a website and in compatibility with older web browsers





Responsive design allows software developers to build a Web page that can dynamically adapt to
the size of the devices. This development philosophy enables the rendering of Web pages in a
fast and optimized way, ensuring a good user experience on mobile devices, tablet and desktop.
In the scope of this study, we intend to explore the main advantages and limitations associated
with responsive Web design. We adopted a quantitative approach based on a questionnaire filled
by 181  professionals in the industry that allowed us to identify the reasons that lead software
developers to the adoption of the responsive design and also address the limitations felt by them.
The results  obtained indicate that offering a good user experience and increasing accessibility
stands  out as being  the most important  advantages. On  the other hand,  the main  limitations
include the compatibility with older Web browsers, the higher loading time and the difficulties in
optimizing  user experience.  Finally,  it was  found  that  the perception  of the  advantages  and
limitations of responsive design is distinct for professionals with more professional experience in
the field and for freelancer developers.

Responsive design allows software developers to build a Web page that can dynamically adapt to the size of the devices. This development philosophy enables the rendering of Web pages in a fast and optimized way, ensuring a good user experience on mobile devices, tablet and desktop. In the scope of this study, we intend to explore the main advantages and limitations associated with responsive Web design. We adopted a quantitative approach based on a questionnaire filled by 181 professionals in the industry that allowed us to identify the reasons that lead software developers to the adoption of the responsive design and also address the limitations felt by them. The results obtained indicate that offering a good user experience and increasing accessibility stands out as being the most important advantages. On the other hand, the main limitations include the compatibility with older Web browsers, the higher loading time and the difficulties in optimizing user experience. Finally, it was found that the perception of the advantages and limitations of responsive design is distinct for professionals with more professional experience in the field and for freelancer developers.


Responsive design allows software developers to build a Web page that can dynamically adapt to the size of the devices. This development philosophy enables the rendering of Web pages in a
fast and optimized way, ensuring a good user experience on mobile devices, tablet and desktop.
In the scope of this study, we intend to explore the main advantages and limitations associated
with responsive Web design. We adopted a quantitative approach based on a questionnaire filled
by 181  professionals in the industry that allowed us to identify the reasons that lead software
developers to the adoption of the responsive design and also address the limitations felt by them.
The results  obtained indicate that offering a good user experience and increasing accessibility
stands  out as being  the most important  advantages. On  the other hand,  the main  limitations
include the compatibility with older Web browsers, the higher loading time and the difficulties in
optimizing  user experience.  Finally,  it was  found  that  the perception  of the  advantages  and
limitations of responsive design is distinct for professionals with more professional experience in
the field and for freelancer developers.




As new devices and technologies are invented to access the internet, from computer desktops, laptops, mobile phones to smart TVs, there has been a great need to upgrade the techniques used in the field of website design, because these new devices come along with their own specific sizes and views. Although most devices & technologies try to be as compatible as possible with the common web design features, but there has been an absolute need for website designers to do a lit bit more to adapt to the fast growing race in internet devices and provide all their viewers with the best possible experience while accessing their websites. In this paper, different responsive website design techniques are presented that could adapt to different technologies and devices while at the same time focusing on cutting down the time and effort needed for a website designer or programmer to maintain and edit it. The code samples in this paper were implemented using the ASP.net programming language, but it can be implemented in other development languages and environments using the same concepts.




Responsive design allows software developers to build a Web page that can dynamically adapt to the size of the devices. This     development philosophy enables the rendering of Web pages in afast and optimized way, ensuring a good user experience on mobile devices, tablet and desktop.In the scope of this study, we intend to explore the main advantages and limitations associated with responsive Web design. We adopted a quantitative approach based on a questionnaire filled by 181  professionals in the industry that allowed us to identify the reasons that lead softwaredevelopers to the adoption of the responsive design and also address the limitations felt by them.The results  obtained indicate that offering a good user experience and increasing accessibility stands  out as being  the most important  advantages. On  the other hand,  the main  limitations include the compatibility with older Web browsers, the higher loading time and the difficulties in optimizing  user experience.  Finally,  it was  found  that  the perception  of the  advantages  andlimitations of responsive design is distinct for professionals with more professional experience in the field and for freelancer developers.

 




